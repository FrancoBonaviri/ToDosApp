{"ast":null,"code":"import { apiService } from '../services/apiService';\nimport { types } from '../types/types';\nimport Swal from 'sweetalert2';\nexport const StartObtenerTodos = token => {\n  return dispatch => {\n    return apiService.obtenerToDos(token).then(res => {\n      dispatch(ObtenerToDos(res.data.ToDos));\n    }).catch(e => {\n      Swal.fire('Error', e.message, 'error');\n    });\n  };\n};\n_c = StartObtenerTodos;\nexport const StartCraeteToDo = (token, Name, Description, LimitDate, Criticality) => {\n  return dispatch => {\n    return apiService.createTodo(token, Name, Description, LimitDate, Criticality).then(res => {\n      dispatch(CraeteToDo(res.data.ToDo));\n      Swal.fire('Genial!!!', 'Creamos el ToDo con exito', 'success');\n    }).catch(e => {\n      Swal.fire('Error', e.message, 'error');\n    });\n  };\n};\n_c2 = StartCraeteToDo;\nexport const StartDeleteToDo = (token, id) => {\n  return dispatch => {\n    return apiService.deleteTodo(token, id).then(res => {\n      dispatch(CraeteToDo(res.data.ToDo));\n      Swal.fire('Genial!!!', 'Eliminamos el ToDo con exito', 'success');\n    }).catch(e => {\n      Swal.fire('Error', e.message, 'error');\n    });\n  };\n};\n_c3 = StartDeleteToDo;\n\nconst CraeteToDo = todo => ({\n  type: types.newToDo,\n  payload: todo\n});\n\n_c4 = CraeteToDo;\n\nconst ObtenerToDos = todos => ({\n  type: types.obtenerToDos,\n  payload: todos\n});\n\n_c5 = ObtenerToDos;\n\nconst ObtenerToDosAnteriores = todos => ({\n  type: types.obtenerToDosAnteriores,\n  payload: todos\n});\n\n_c6 = ObtenerToDosAnteriores;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"StartObtenerTodos\");\n$RefreshReg$(_c2, \"StartCraeteToDo\");\n$RefreshReg$(_c3, \"StartDeleteToDo\");\n$RefreshReg$(_c4, \"CraeteToDo\");\n$RefreshReg$(_c5, \"ObtenerToDos\");\n$RefreshReg$(_c6, \"ObtenerToDosAnteriores\");","map":{"version":3,"sources":["/home/franc/proyectos/ToDosApp/client/src/actions/Todos.js"],"names":["apiService","types","Swal","StartObtenerTodos","token","dispatch","obtenerToDos","then","res","ObtenerToDos","data","ToDos","catch","e","fire","message","StartCraeteToDo","Name","Description","LimitDate","Criticality","createTodo","CraeteToDo","ToDo","StartDeleteToDo","id","deleteTodo","todo","type","newToDo","payload","todos","ObtenerToDosAnteriores","obtenerToDosAnteriores"],"mappings":"AAAA,SAASA,UAAT,QAA2B,wBAA3B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAGA,OAAO,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACxC,SAAQC,QAAD,IAAc;AAEjB,WAAOL,UAAU,CAACM,YAAX,CAAwBF,KAAxB,EACNG,IADM,CACAC,GAAG,IAAK;AACXH,MAAAA,QAAQ,CAAEI,YAAY,CAAED,GAAG,CAACE,IAAJ,CAASC,KAAX,CAAd,CAAR;AACH,KAHM,EAINC,KAJM,CAICC,CAAC,IAAI;AACTX,MAAAA,IAAI,CAACY,IAAL,CAAU,OAAV,EAAmBD,CAAC,CAACE,OAArB,EAA8B,OAA9B;AACH,KANM,CAAP;AAQH,GAVD;AAWH,CAZM;KAAMZ,iB;AAeb,OAAO,MAAMa,eAAe,GAAG,CAACZ,KAAD,EAAQa,IAAR,EAAcC,WAAd,EAA2BC,SAA3B,EAAsCC,WAAtC,KAAsD;AACjF,SAAQf,QAAD,IAAc;AAEjB,WAAOL,UAAU,CAACqB,UAAX,CAAsBjB,KAAtB,EAA6Ba,IAA7B,EAAmCC,WAAnC,EAAgDC,SAAhD,EAA2DC,WAA3D,EACNb,IADM,CACAC,GAAG,IAAK;AACXH,MAAAA,QAAQ,CAAEiB,UAAU,CAAEd,GAAG,CAACE,IAAJ,CAASa,IAAX,CAAZ,CAAR;AAEArB,MAAAA,IAAI,CAACY,IAAL,CAAU,WAAV,EAAuB,2BAAvB,EAAoD,SAApD;AACH,KALM,EAMNF,KANM,CAMCC,CAAC,IAAI;AACTX,MAAAA,IAAI,CAACY,IAAL,CAAU,OAAV,EAAmBD,CAAC,CAACE,OAArB,EAA8B,OAA9B;AACH,KARM,CAAP;AAUH,GAZD;AAaH,CAdM;MAAMC,e;AAiBb,OAAO,MAAMQ,eAAe,GAAG,CAAEpB,KAAF,EAASqB,EAAT,KAAiB;AAC5C,SAAQpB,QAAD,IAAc;AAEjB,WAAOL,UAAU,CAAC0B,UAAX,CAAsBtB,KAAtB,EAA6BqB,EAA7B,EACNlB,IADM,CACAC,GAAG,IAAK;AACXH,MAAAA,QAAQ,CAAEiB,UAAU,CAAEd,GAAG,CAACE,IAAJ,CAASa,IAAX,CAAZ,CAAR;AAEArB,MAAAA,IAAI,CAACY,IAAL,CAAU,WAAV,EAAuB,8BAAvB,EAAuD,SAAvD;AACH,KALM,EAMNF,KANM,CAMCC,CAAC,IAAI;AACTX,MAAAA,IAAI,CAACY,IAAL,CAAU,OAAV,EAAmBD,CAAC,CAACE,OAArB,EAA8B,OAA9B;AACH,KARM,CAAP;AAUH,GAZD;AAaH,CAdM;MAAMS,e;;AAiBb,MAAMF,UAAU,GAAIK,IAAD,KAAW;AAC1BC,EAAAA,IAAI,EAAE3B,KAAK,CAAC4B,OADc;AAE1BC,EAAAA,OAAO,EAAEH;AAFiB,CAAX,CAAnB;;MAAML,U;;AAON,MAAMb,YAAY,GAAIsB,KAAD,KAAY;AAC7BH,EAAAA,IAAI,EAAE3B,KAAK,CAACK,YADiB;AAE7BwB,EAAAA,OAAO,EAAEC;AAFoB,CAAZ,CAArB;;MAAMtB,Y;;AAKN,MAAMuB,sBAAsB,GAAID,KAAD,KAAY;AACvCH,EAAAA,IAAI,EAAE3B,KAAK,CAACgC,sBAD2B;AAEvCH,EAAAA,OAAO,EAAEC;AAF8B,CAAZ,CAA/B;;MAAMC,sB","sourcesContent":["import { apiService } from '../services/apiService'\nimport { types } from '../types/types'\nimport Swal from 'sweetalert2';\n\n\nexport const StartObtenerTodos = (token) => {\n    return (dispatch) => {\n\n        return apiService.obtenerToDos(token)\n        .then( res  => {\n            dispatch( ObtenerToDos( res.data.ToDos ) )\n        })\n        .catch( e => {\n            Swal.fire('Error', e.message, 'error');\n        })\n\n    }\n}\n\n\nexport const StartCraeteToDo = (token, Name, Description, LimitDate, Criticality) => {\n    return (dispatch) => {\n\n        return apiService.createTodo(token, Name, Description, LimitDate, Criticality)\n        .then( res  => {\n            dispatch( CraeteToDo( res.data.ToDo ) );\n\n            Swal.fire('Genial!!!', 'Creamos el ToDo con exito', 'success')\n        })\n        .catch( e => {\n            Swal.fire('Error', e.message, 'error');\n        })\n\n    }\n}\n\n\nexport const StartDeleteToDo = ( token, id ) => {\n    return (dispatch) => {\n\n        return apiService.deleteTodo(token, id)\n        .then( res  => {\n            dispatch( CraeteToDo( res.data.ToDo ) );\n\n            Swal.fire('Genial!!!', 'Eliminamos el ToDo con exito', 'success')\n        })\n        .catch( e => {\n            Swal.fire('Error', e.message, 'error');\n        })\n\n    } \n}\n\n\nconst CraeteToDo = (todo) => ({\n    type: types.newToDo,\n    payload: todo\n})\n\n\n\nconst ObtenerToDos = (todos) => ({\n    type: types.obtenerToDos,\n    payload: todos\n})\n\nconst ObtenerToDosAnteriores = (todos) => ({\n    type: types.obtenerToDosAnteriores,\n    payload: todos\n})"]},"metadata":{},"sourceType":"module"}