{"ast":null,"code":"import { types } from '../types/types';\nconst initialState = {\n  toDos: [],\n  toDosAnteriores: []\n};\nexport const toDoReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.newToDo:\n      return { ...state,\n        toDos: [action.payload, ...state.toDos]\n      };\n\n    case types.deleteToDo:\n      return { ...state,\n        toDos: [...state.toDos.filter(todo => todo._id != action.payload)]\n      };\n\n    case types.completeToDo:\n      return { ...state,\n        toDosAnteriores: [...state.toDosAnteriores, { ...state.toDos.find(todo => todo._id == action.payload),\n          Completed: true\n        }],\n        toDos: [...state.toDos.filter(todo => todo._id != action.payload)]\n      };\n\n    case types.obtenerToDos:\n      return { ...state,\n        toDos: [...action.payload]\n      };\n\n    case types.obtenerToDosAnteriores:\n      return { ...state,\n        toDosAnteriores: [...action.payload]\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};","map":{"version":3,"sources":["/home/franc/proyectos/ToDosApp/client/src/reducers/toDoReducer.js"],"names":["types","initialState","toDos","toDosAnteriores","toDoReducer","state","action","type","newToDo","payload","deleteToDo","filter","todo","_id","completeToDo","find","Completed","obtenerToDos","obtenerToDosAnteriores"],"mappings":"AAAA,SAASA,KAAT,QAAsB,gBAAtB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,eAAe,EAAE;AAFA,CAArB;AAMA,OAAO,MAAMC,WAAW,GAAG,CAAEC,KAAK,GAAGJ,YAAV,EAAwBK,MAAxB,KAAoC;AAE3D,UAASA,MAAM,CAACC,IAAhB;AACI,SAAKP,KAAK,CAACQ,OAAX;AACI,aAAO,EACH,GAAGH,KADA;AAEHH,QAAAA,KAAK,EAAE,CAAEI,MAAM,CAACG,OAAT,EAAkB,GAAGJ,KAAK,CAACH,KAA3B;AAFJ,OAAP;;AAIJ,SAAKF,KAAK,CAACU,UAAX;AACI,aAAO,EACH,GAAGL,KADA;AAEHH,QAAAA,KAAK,EAAG,CAAE,GAAIG,KAAK,CAACH,KAAN,CAAYS,MAAZ,CAAoBC,IAAI,IAAIA,IAAI,CAACC,GAAL,IAAYP,MAAM,CAACG,OAA/C,CAAN;AAFL,OAAP;;AAIJ,SAAKT,KAAK,CAACc,YAAX;AACI,aAAO,EACH,GAAGT,KADA;AAEHF,QAAAA,eAAe,EAAE,CAAE,GAAGE,KAAK,CAACF,eAAX,EAA4B,EAAE,GAAGE,KAAK,CAACH,KAAN,CAAYa,IAAZ,CAAkBH,IAAI,IAAIA,IAAI,CAACC,GAAL,IAAYP,MAAM,CAACG,OAA7C,CAAL;AAA8DO,UAAAA,SAAS,EAAE;AAAzE,SAA5B,CAFd;AAGHd,QAAAA,KAAK,EAAE,CAAE,GAAGG,KAAK,CAACH,KAAN,CAAYS,MAAZ,CAAoBC,IAAI,IAAIA,IAAI,CAACC,GAAL,IAAYP,MAAM,CAACG,OAA/C,CAAL;AAHJ,OAAP;;AAKJ,SAAKT,KAAK,CAACiB,YAAX;AACI,aAAO,EACH,GAAGZ,KADA;AAEHH,QAAAA,KAAK,EAAE,CAAE,GAAGI,MAAM,CAACG,OAAZ;AAFJ,OAAP;;AAIJ,SAAKT,KAAK,CAACkB,sBAAX;AACI,aAAO,EACH,GAAGb,KADA;AAEHF,QAAAA,eAAe,EAAE,CAAE,GAAGG,MAAM,CAACG,OAAZ;AAFd,OAAP;;AAIJ;AACA,aAAO,EACH,GAAGJ;AADA,OAAP;AA5BJ;AAmCH,CArCM","sourcesContent":["import { types } from '../types/types';\n\nconst initialState = {\n    toDos: [],\n    toDosAnteriores: []\n}\n\n\nexport const toDoReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.newToDo : \n            return {\n                ...state,\n                toDos: [ action.payload, ...state.toDos, ]\n            }\n        case types.deleteToDo :\n            return {\n                ...state,\n                toDos : [ ...(state.toDos.filter( todo => todo._id != action.payload  )) ]\n            } \n        case types.completeToDo :\n            return {\n                ...state,\n                toDosAnteriores: [ ...state.toDosAnteriores, { ...state.toDos.find( todo => todo._id == action.payload  ), Completed: true }],\n                toDos: [ ...state.toDos.filter( todo => todo._id != action.payload  ) ]\n            } \n        case types.obtenerToDos :\n            return {\n                ...state,\n                toDos: [ ...action.payload ]\n            } \n        case types.obtenerToDosAnteriores :\n            return {\n                ...state,\n                toDosAnteriores: [ ...action.payload ]\n            } \n        default: \n        return {\n            ...state\n        }\n    }\n\n\n\n}"]},"metadata":{},"sourceType":"module"}