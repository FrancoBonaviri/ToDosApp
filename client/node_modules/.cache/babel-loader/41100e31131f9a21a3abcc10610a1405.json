{"ast":null,"code":"import { apiService } from '../services/apiService';\nimport { types } from '../types/types';\nimport Swal from 'sweetalert2';\nexport const StartObtenerTodos = token => {\n  return dispatch => {\n    return apiService.obtenerToDos(token).then(res => {\n      dispatch(ObtenerToDos(res.data.ToDos));\n    }).catch(e => {\n      Swal.fire('Error', e.message, 'error');\n    });\n  };\n};\n_c = StartObtenerTodos;\n\nconst ObtenerToDos = todos => ({\n  type: types.obtenerToDos,\n  payload: todos\n});\n\n_c2 = ObtenerToDos;\nexport const StartCraeteToDo = (token, Name, Description, LimitDate, Criticality) => {\n  return dispatch => {\n    return apiService.createTodo(token, Name, Description, LimitDate, Criticality).then(res => {\n      dispatch(CraeteToDo(res.data.ToDo));\n      Swal.fire('Genial!!!', 'Creamos el ToDo con exito', 'success');\n    }).catch(e => {\n      Swal.fire('Error', e.message, 'error');\n    });\n  };\n};\n_c3 = StartCraeteToDo;\n\nconst CraeteToDo = todo => ({\n  type: types.newToDo,\n  payload: todo\n});\n\n_c4 = CraeteToDo;\nexport const StartDeleteToDo = (token, id) => {\n  return dispatch => {\n    return apiService.deleteTodo(token, id).then(res => {\n      dispatch(deleteTodo(id));\n      Swal.fire('Genial!!!', 'Eliminamos el ToDo con exito', 'success');\n    }).catch(e => {\n      Swal.fire('Error', e.message, 'error');\n    });\n  };\n};\n_c5 = StartDeleteToDo;\n\nconst deleteTodo = id => ({\n  type: types.deleteToDo,\n  payload: id\n});\n\nexport const StartCompletedToDo = (token, id) => {\n  return dispatch => {\n    return apiService.completedToDo(token, id).then(res => {\n      dispatch(completedTodo(id));\n      Swal.fire('Genial!!!', 'Completamos el ToDo con exito', 'success');\n    }).catch(e => {\n      Swal.fire('Error', e.message, 'error');\n    });\n  };\n};\n_c6 = StartCompletedToDo;\n\nconst completedTodo = id => ({\n  type: types.completeToDo,\n  payload: id\n});\n\nexport const StartObtenerToDosAnteriores = token => {\n  return dispatch => {\n    return apiService.obtenerToDosAnteriores(token).then(res => {\n      dispatch(ObtenerToDosAnteriores(res.data.ToDos));\n    }).catch(e => {\n      Swal.fire('Error', e.message, 'error');\n    });\n  };\n};\n_c7 = StartObtenerToDosAnteriores;\n\nconst ObtenerToDosAnteriores = todos => ({\n  type: types.obtenerToDosAnteriores,\n  payload: todos\n});\n\n_c8 = ObtenerToDosAnteriores;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"StartObtenerTodos\");\n$RefreshReg$(_c2, \"ObtenerToDos\");\n$RefreshReg$(_c3, \"StartCraeteToDo\");\n$RefreshReg$(_c4, \"CraeteToDo\");\n$RefreshReg$(_c5, \"StartDeleteToDo\");\n$RefreshReg$(_c6, \"StartCompletedToDo\");\n$RefreshReg$(_c7, \"StartObtenerToDosAnteriores\");\n$RefreshReg$(_c8, \"ObtenerToDosAnteriores\");","map":{"version":3,"sources":["/home/franc/proyectos/ToDosApp/client/src/actions/Todos.js"],"names":["apiService","types","Swal","StartObtenerTodos","token","dispatch","obtenerToDos","then","res","ObtenerToDos","data","ToDos","catch","e","fire","message","todos","type","payload","StartCraeteToDo","Name","Description","LimitDate","Criticality","createTodo","CraeteToDo","ToDo","todo","newToDo","StartDeleteToDo","id","deleteTodo","deleteToDo","StartCompletedToDo","completedToDo","completedTodo","completeToDo","StartObtenerToDosAnteriores","obtenerToDosAnteriores","ObtenerToDosAnteriores"],"mappings":"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","sourcesContent":["import { apiService } from '../services/apiService'\nimport { types } from '../types/types'\nimport Swal from 'sweetalert2';\n\n\nexport const StartObtenerTodos = (token) => {\n    return (dispatch) => {\n\n        return apiService.obtenerToDos(token)\n        .then( res  => {\n            dispatch( ObtenerToDos( res.data.ToDos ) )\n        })\n        .catch( e => {\n            Swal.fire('Error', e.message, 'error');\n        })\n\n    }\n}\nconst ObtenerToDos = (todos) => ({\n    type: types.obtenerToDos,\n    payload: todos\n})\n\n\nexport const StartCraeteToDo = (token, Name, Description, LimitDate, Criticality) => {\n    return (dispatch) => {\n\n        return apiService.createTodo(token, Name, Description, LimitDate, Criticality)\n        .then( res  => {\n            dispatch( CraeteToDo( res.data.ToDo ) );\n\n            Swal.fire('Genial!!!', 'Creamos el ToDo con exito', 'success')\n        })\n        .catch( e => {\n            Swal.fire('Error', e.message, 'error');\n        })\n\n    }\n}\n\nconst CraeteToDo = (todo) => ({\n    type: types.newToDo,\n    payload: todo\n})\n\n\nexport const StartDeleteToDo = ( token, id ) => {\n    return (dispatch) => {\n\n        return apiService.deleteTodo(token, id)\n        .then( res  => {\n            dispatch( deleteTodo( id ) );\n\n            Swal.fire('Genial!!!', 'Eliminamos el ToDo con exito', 'success')\n        })\n        .catch( e => {\n            Swal.fire('Error', e.message, 'error');\n        })\n\n    } \n}\n\nconst deleteTodo = ( id ) => ({\n    type: types.deleteToDo,\n    payload: id\n})\n\n\n\n\nexport const StartCompletedToDo = ( token, id ) => {\n    return (dispatch) => {\n\n        return apiService.completedToDo(token, id)\n        .then( res  => {\n            dispatch( completedTodo( id ) );\n\n            Swal.fire('Genial!!!', 'Completamos el ToDo con exito', 'success')\n        })\n        .catch( e => {\n            Swal.fire('Error', e.message, 'error');\n        })\n\n    } \n}\n\nconst completedTodo = ( id ) => ({\n    type: types.completeToDo,\n    payload: id\n})\n\n\n\nexport const StartObtenerToDosAnteriores = ( token ) => {\n    return (dispatch) => {\n\n        return apiService.obtenerToDosAnteriores(token)\n        .then( res  => {\n            dispatch( ObtenerToDosAnteriores( res.data.ToDos ) )\n        })\n        .catch( e => {\n            Swal.fire('Error', e.message, 'error');\n        })\n\n    }\n}\n\n\n\nconst ObtenerToDosAnteriores = (todos) => ({\n    type: types.obtenerToDosAnteriores,\n    payload: todos\n})"]},"metadata":{},"sourceType":"module"}