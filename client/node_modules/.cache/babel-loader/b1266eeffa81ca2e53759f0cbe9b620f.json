{"ast":null,"code":"var _jsxFileName = \"/home/franc/proyectos/ToDosApp/client/src/components/main/ModalNewToDo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Modal, Form, InputGroup, FormControl } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { HideModalNewToDo, ShowModalNewToDo } from '../../actions/Modal';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ModalNewToDo = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    showModal\n  } = useSelector(state => state.modal);\n  const [formValues, setformValues] = useState({\n    Name: '',\n    Description: '',\n    LimitDate: '',\n    Criticality: ''\n  });\n  const [formErrors, setformErrors] = useState({\n    Name: false,\n    Description: false,\n    LimitDate: false,\n    Criticality: false\n  });\n\n  const handleClose = () => dispatch(HideModalNewToDo());\n\n  const handleChange = ({\n    target\n  }) => {\n    setformValues({ ...formValues,\n      [target.name]: target.value\n    });\n  };\n\n  const handleSubmit = () => {\n    if (isValid()) {\n      console.log(formValues);\n    }\n  };\n\n  const isValid = () => {\n    var _formValues$Name, _formValues$Descripti;\n\n    let errorObject = {\n      Name: false,\n      Description: false,\n      LimitDate: false,\n      Criticality: false\n    };\n    let result = true;\n\n    if (!(((_formValues$Name = formValues.Name) === null || _formValues$Name === void 0 ? void 0 : _formValues$Name.trim()) != '')) {\n      errorObject.Name = true;\n    }\n\n    if (!(((_formValues$Descripti = formValues.Description) === null || _formValues$Descripti === void 0 ? void 0 : _formValues$Descripti.trim()) != '')) {\n      errorObject.Description = true;\n    }\n\n    if (!(formValues.LimitDate && moment().isBefore(moment(formValues.LimitDate)))) {\n      errorObject.LimitDate = true;\n    }\n\n    Object.keys(errorObject).forEach(key => {\n      if (errorObject[key]) {\n        result = false;\n      }\n    });\n    setformErrors({ ...errorObject\n    });\n    return result;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Nuevo ToDo!!!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Nombre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              isInvalid: formErrors.Name,\n              name: \"Name\",\n              value: formValues.Name,\n              placeholder: \"Nombre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Descripcion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              isInvalid: formErrors.Description,\n              name: \"Description\",\n              value: formValues.Description,\n              placeholder: \"Descripcion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Fecha limite\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              isInvalid: formErrors.LimitDate,\n              name: \"LimitDate\",\n              value: formValues.LimitDate,\n              placeholder: \"Fecha limite\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3 mt-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              style: {\n                display: 'block'\n              },\n              children: \"Criticidad\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n              inline: true,\n              label: \"Baja\",\n              name: \"Criticality\",\n              value: \"0\",\n              type: \"radio\",\n              id: `inline-radio-1`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n              inline: true,\n              label: \"Media\",\n              name: \"Criticality\",\n              value: \"1\",\n              type: \"radio\",\n              id: `inline-radio-2`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n              inline: true,\n              label: \"Alta\",\n              name: \"Criticality\",\n              value: \"2\",\n              type: \"radio\",\n              id: `inline-radio-3`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 21\n            }, this), formErrors.Criticality && /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-danger\",\n              children: \"Debe completar este campo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSubmit,\n          children: \"Confirmar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(ModalNewToDo, \"zmgvOsoRpPahDMTk44x/IUorpFM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ModalNewToDo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalNewToDo\");","map":{"version":3,"sources":["/home/franc/proyectos/ToDosApp/client/src/components/main/ModalNewToDo.js"],"names":["React","useState","Button","Modal","Form","InputGroup","FormControl","useDispatch","useSelector","HideModalNewToDo","ShowModalNewToDo","moment","ModalNewToDo","dispatch","showModal","state","modal","formValues","setformValues","Name","Description","LimitDate","Criticality","formErrors","setformErrors","handleClose","handleChange","target","name","value","handleSubmit","isValid","console","log","errorObject","result","trim","isBefore","Object","keys","forEach","key","display"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {Button, Modal, Form, InputGroup, FormControl} from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { HideModalNewToDo, ShowModalNewToDo } from '../../actions/Modal';\nimport moment from 'moment';\n\nexport const ModalNewToDo = () => {\n\n    const dispatch = useDispatch()\n    const { showModal } = useSelector( state => state.modal )\n    const [formValues, setformValues] = useState({\n        Name: '',\n        Description: '',\n        LimitDate: '',\n        Criticality: ''\n    })\n    const [formErrors, setformErrors] = useState({\n        Name: false,\n        Description: false,\n        LimitDate: false,\n        Criticality: false\n    })\n\n    const handleClose = () => dispatch( HideModalNewToDo() );\n\n    const handleChange = ({ target }) => {\n        setformValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n    }\n\n\n    const handleSubmit = () => {\n        if( isValid() ){\n\n            console.log( formValues )\n        }\n    }\n\n\n    const isValid = () => {\n\n        let errorObject = {\n            Name: false,\n            Description: false,\n            LimitDate: false,\n            Criticality: false\n        }\n        let result = true;\n        \n        if( !(formValues.Name?.trim() != '') ) {\n            errorObject.Name = true;\n        }\n\n        if( !(formValues.Description?.trim() != '') ) {\n            errorObject.Description = true;\n        }\n\n        if( ! (formValues.LimitDate && moment().isBefore( moment(formValues.LimitDate ))  ) ) {\n            errorObject.LimitDate = true;\n        }\n\n\n\n\n\n        Object.keys(errorObject).forEach( key => {\n            if( errorObject[key] ) {\n                result = false;\n            } \n        });\n\n\n        setformErrors({...errorObject});\n        return result;\n    }\n\n\n\n\n    return (\n    <>\n        <Modal show={showModal} onHide={handleClose}>\n        <Modal.Header closeButton>\n            <Modal.Title>Nuevo ToDo!!!</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            <Form onChange={ handleChange }>\n\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Form.Label>Nombre</Form.Label>\n                    <Form.Control type=\"text\" isInvalid={ formErrors.Name } name='Name' value={ formValues.Name } placeholder=\"Nombre\" />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Descripcion</Form.Label>\n                    <Form.Control type=\"text\" isInvalid={ formErrors.Description }  name='Description' value={ formValues.Description } placeholder=\"Descripcion\" />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Fecha limite</Form.Label>\n                    <Form.Control type=\"date\" isInvalid={ formErrors.LimitDate } name='LimitDate' value={ formValues.LimitDate } placeholder=\"Fecha limite\" />\n                </Form.Group>\n\n\n                <Form.Group className=\"mb-3 mt-3\"> \n                    <Form.Label style={{ display: 'block' }}>Criticidad</Form.Label>\n\n                    <Form.Check\n                        inline\n                        label=\"Baja\"\n                        name=\"Criticality\"\n                        value='0'\n                        type='radio'\n                        id={`inline-radio-1`}\n                    />\n                    <Form.Check\n                        inline\n                        label=\"Media\"\n                        name=\"Criticality\"\n                        value='1'\n                        type='radio'\n                        id={`inline-radio-2`}\n                    />\n                    <Form.Check\n                        inline\n                        label=\"Alta\"\n                        name=\"Criticality\"\n                        value='2'\n                        type='radio'\n                        id={`inline-radio-3`}\n                    /> \n                    {\n                        formErrors.Criticality &&\n                        <Form.Text className=\"text-danger\">\n                            Debe completar este campo\n                        </Form.Text>\n                    }\n                </Form.Group>\n            </Form>\n        </Modal.Body>\n        <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n            Cancelar\n            </Button>\n            <Button variant=\"primary\" onClick={ handleSubmit }>\n            Confirmar\n            </Button>\n        </Modal.Footer>\n        </Modal>\n    </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}