{"ast":null,"code":"import { apiService } from '../services/apiService';\nimport { types } from '../types/types';\nimport Swal from 'sweetalert2';\nexport const StartObtenerTodos = token => {\n  return dispatch => {\n    return apiService.obtenerToDos(token).then(res => {\n      dispatch(ObtenerToDos(res.data.ToDos));\n    }).catch(e => {\n      Swal.fire('Error', e.message, 'error');\n    });\n  };\n};\n_c = StartObtenerTodos;\n\nconst ObtenerToDos = todos => ({\n  type: types.obtenerToDos,\n  payload: todos\n});\n\n_c2 = ObtenerToDos;\n\nconst ObtenerToDosAnteriores = todos => ({\n  type: types.obtenerToDosAnteriores,\n  payload: todos\n});\n\n_c3 = ObtenerToDosAnteriores;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StartObtenerTodos\");\n$RefreshReg$(_c2, \"ObtenerToDos\");\n$RefreshReg$(_c3, \"ObtenerToDosAnteriores\");","map":{"version":3,"sources":["/home/franc/proyectos/ToDosApp/client/src/actions/Todos.js"],"names":["apiService","types","Swal","StartObtenerTodos","token","dispatch","obtenerToDos","then","res","ObtenerToDos","data","ToDos","catch","e","fire","message","todos","type","payload","ObtenerToDosAnteriores","obtenerToDosAnteriores"],"mappings":"AAAA,SAASA,UAAT,QAA2B,wBAA3B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAGA,OAAO,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACxC,SAAQC,QAAD,IAAc;AAEjB,WAAOL,UAAU,CAACM,YAAX,CAAwBF,KAAxB,EACNG,IADM,CACAC,GAAG,IAAK;AACXH,MAAAA,QAAQ,CAAEI,YAAY,CAAED,GAAG,CAACE,IAAJ,CAASC,KAAX,CAAd,CAAR;AACH,KAHM,EAINC,KAJM,CAICC,CAAC,IAAI;AACTX,MAAAA,IAAI,CAACY,IAAL,CAAU,OAAV,EAAmBD,CAAC,CAACE,OAArB,EAA8B,OAA9B;AACH,KANM,CAAP;AAQH,GAVD;AAWH,CAZM;KAAMZ,iB;;AAoBb,MAAMM,YAAY,GAAIO,KAAD,KAAY;AAC7BC,EAAAA,IAAI,EAAEhB,KAAK,CAACK,YADiB;AAE7BY,EAAAA,OAAO,EAAEF;AAFoB,CAAZ,CAArB;;MAAMP,Y;;AAKN,MAAMU,sBAAsB,GAAIH,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAEhB,KAAK,CAACmB,sBAD2B;AAEvCF,EAAAA,OAAO,EAAEF;AAF8B,CAAZ,CAA/B;;MAAMG,sB","sourcesContent":["import { apiService } from '../services/apiService'\nimport { types } from '../types/types'\nimport Swal from 'sweetalert2';\n\n\nexport const StartObtenerTodos = (token) => {\n    return (dispatch) => {\n\n        return apiService.obtenerToDos(token)\n        .then( res  => {\n            dispatch( ObtenerToDos( res.data.ToDos ) )\n        })\n        .catch( e => {\n            Swal.fire('Error', e.message, 'error');\n        })\n\n    }\n}\n\n\n\n\n\n\n\nconst ObtenerToDos = (todos) => ({\n    type: types.obtenerToDos,\n    payload: todos\n})\n\nconst ObtenerToDosAnteriores = (todos) => ({\n    type: types.obtenerToDosAnteriores,\n    payload: todos\n})"]},"metadata":{},"sourceType":"module"}