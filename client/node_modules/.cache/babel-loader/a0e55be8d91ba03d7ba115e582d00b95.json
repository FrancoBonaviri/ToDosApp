{"ast":null,"code":"import { apiService } from '../services/apiService';\nimport { types } from '../types/types';\nexport const startLogin = (email, password) => {\n  return dispatch => {\n    console.log(email, password);\n    return apiService.login(email, password).then(res => {\n      console.log(res);\n      dispatch(login(res.data.user, res.data.token));\n    }).catch(err => {\n      console.log(err);\n      throw new Error(err);\n    });\n  };\n};\nexport const logout = () => ({\n  type: types.logout\n});\n\nconst login = (user, token) => ({\n  type: types.login,\n  payload: {\n    user,\n    token\n  }\n});","map":{"version":3,"sources":["/home/franc/proyectos/ToDosApp/client/src/actions/User.js"],"names":["apiService","types","startLogin","email","password","dispatch","console","log","login","then","res","data","user","token","catch","err","Error","logout","type","payload"],"mappings":"AAAA,SAASA,UAAT,QAA2B,wBAA3B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAGA,OAAO,MAAMC,UAAU,GAAG,CAAEC,KAAF,EAASC,QAAT,KAAuB;AAC7C,SAAQC,QAAD,IAAc;AAEjBC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EAAmBC,QAAnB;AACA,WAAOJ,UAAU,CAACQ,KAAX,CAAiBL,KAAjB,EAAwBC,QAAxB,EACNK,IADM,CACAC,GAAG,IAAI;AACVJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACAL,MAAAA,QAAQ,CAAEG,KAAK,CAACE,GAAG,CAACC,IAAJ,CAASC,IAAV,EAAgBF,GAAG,CAACC,IAAJ,CAASE,KAAzB,CAAP,CAAR;AACH,KAJM,EAKNC,KALM,CAKCC,GAAG,IAAI;AACXT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AACA,YAAM,IAAIC,KAAJ,CAAWD,GAAX,CAAN;AACH,KARM,CAAP;AAWH,GAdD;AAeH,CAhBM;AAkBP,OAAO,MAAME,MAAM,GAAG,OAAO;AACzBC,EAAAA,IAAI,EAAEjB,KAAK,CAACgB;AADa,CAAP,CAAf;;AAKP,MAAMT,KAAK,GAAG,CAACI,IAAD,EAAOC,KAAP,MAAkB;AAC5BK,EAAAA,IAAI,EAAEjB,KAAK,CAACO,KADgB;AAE5BW,EAAAA,OAAO,EAAE;AACLP,IAAAA,IADK;AAELC,IAAAA;AAFK;AAFmB,CAAlB,CAAd","sourcesContent":["import { apiService } from '../services/apiService'\nimport { types } from '../types/types'\n\n\nexport const startLogin = ( email, password ) => {\n    return (dispatch) => {\n\n        console.log(email, password)\n        return apiService.login(email, password)\n        .then( res => {\n            console.log(res);\n            dispatch( login(res.data.user, res.data.token) )\n        })\n        .catch( err => {\n            console.log(err)\n            throw new Error( err );\n        })\n\n\n    }\n}\n\nexport const logout = () => ({\n    type: types.logout\n})\n\n\nconst login = (user, token) => ({\n    type: types.login,\n    payload: {\n        user, \n        token\n    }\n})"]},"metadata":{},"sourceType":"module"}