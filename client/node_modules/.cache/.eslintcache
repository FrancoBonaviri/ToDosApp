[{"/home/franc/proyectos/ToDosApp/client/src/index.js":"1","/home/franc/proyectos/ToDosApp/client/src/App.js":"2","/home/franc/proyectos/ToDosApp/client/src/reportWebVitals.js":"3","/home/franc/proyectos/ToDosApp/client/src/components/main/MainLayout.js":"4","/home/franc/proyectos/ToDosApp/client/src/components/main/Appbar.js":"5","/home/franc/proyectos/ToDosApp/client/src/components/auth/AuthPage.js":"6","/home/franc/proyectos/ToDosApp/client/src/components/main/Router.js":"7","/home/franc/proyectos/ToDosApp/client/src/components/main/HomePage.js":"8","/home/franc/proyectos/ToDosApp/client/src/components/main/AnterioresPage.js":"9","/home/franc/proyectos/ToDosApp/client/src/components/main/ModalNewToDo.js":"10","/home/franc/proyectos/ToDosApp/client/src/store/store.js":"11","/home/franc/proyectos/ToDosApp/client/src/reducers/modalReducer.js":"12","/home/franc/proyectos/ToDosApp/client/src/types/types.js":"13","/home/franc/proyectos/ToDosApp/client/src/actions/Modal.js":"14","/home/franc/proyectos/ToDosApp/client/src/actions/User.js":"15","/home/franc/proyectos/ToDosApp/client/src/services/apiService.js":"16","/home/franc/proyectos/ToDosApp/client/src/reducers/userReducer.js":"17","/home/franc/proyectos/ToDosApp/client/src/actions/Todos.js":"18","/home/franc/proyectos/ToDosApp/client/src/reducers/toDoReducer.js":"19"},{"size":628,"mtime":1632753417243,"results":"20","hashOfConfig":"21"},{"size":393,"mtime":1632753656954,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1632664127399,"results":"23","hashOfConfig":"21"},{"size":472,"mtime":1632697548814,"results":"24","hashOfConfig":"21"},{"size":1165,"mtime":1632769689391,"results":"25","hashOfConfig":"21"},{"size":4697,"mtime":1632753279003,"results":"26","hashOfConfig":"21"},{"size":442,"mtime":1632696002178,"results":"27","hashOfConfig":"21"},{"size":3480,"mtime":1632770235092,"results":"28","hashOfConfig":"21"},{"size":2219,"mtime":1632771316576,"results":"29","hashOfConfig":"21"},{"size":5383,"mtime":1632770065652,"results":"30","hashOfConfig":"21"},{"size":622,"mtime":1632758909349,"results":"31","hashOfConfig":"21"},{"size":562,"mtime":1632703037812,"results":"32","hashOfConfig":"21"},{"size":380,"mtime":1632755281399,"results":"33","hashOfConfig":"21"},{"size":205,"mtime":1632702015571,"results":"34","hashOfConfig":"21"},{"size":1017,"mtime":1632754276369,"results":"35","hashOfConfig":"21"},{"size":2358,"mtime":1632770614211,"results":"36","hashOfConfig":"21"},{"size":613,"mtime":1632707899419,"results":"37","hashOfConfig":"21"},{"size":2450,"mtime":1632770612679,"results":"38","hashOfConfig":"21"},{"size":1274,"mtime":1632765814067,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"l8ipff",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},"/home/franc/proyectos/ToDosApp/client/src/index.js",[],["83","84"],"/home/franc/proyectos/ToDosApp/client/src/App.js",[],"/home/franc/proyectos/ToDosApp/client/src/reportWebVitals.js",[],"/home/franc/proyectos/ToDosApp/client/src/components/main/MainLayout.js",[],"/home/franc/proyectos/ToDosApp/client/src/components/main/Appbar.js",[],"/home/franc/proyectos/ToDosApp/client/src/components/auth/AuthPage.js",["85","86","87","88","89","90"],"import React,{ useState } from 'react';\nimport { Card, Form, Button } from 'react-bootstrap';\nimport { useDispatch } from 'react-redux';\nimport { startLogin, startCreateUser } from '../../actions/User';\n\n\n\n\nexport const AuthPage = () => {\n\n    const [loginForm, setLoginForm] = useState(true);\n    \n\n\n\n    return (\n        <div className=\"d-flex align-items-center justify-content-center\" style={{ height: '100vh'}}>\n            <Card style={{ width: '24rem', height: 'auto' }}>\n                <Card.Body>\n                    { \n                        loginForm ?\n                        <LoginForm setLoginForm={setLoginForm}/> :\n                        <RegisterForm setLoginForm={setLoginForm}/>\n                    \n                    }\n                </Card.Body>\n            </Card>\n        </div>\n    )\n}\n\n\n\n\nconst LoginForm = ({setLoginForm}) => {\n\n    const dispatch = useDispatch();\n    const [formValues, setformValues] = useState({\n        email: '',\n        password: ''\n    })\n\n    const handleChange = ({ target }) => {\n        setformValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n    }\n\n\n    const handleSubmit = () => {\n        if( isValid() ){\n\n            try {\n                dispatch( startLogin(formValues.email, formValues.password) )\n            } catch (error) {\n                console.log(error);\n            }\n        }\n    }\n\n\n    const isValid = () => {\n        return !!( formValues.email?.trim() != '' && formValues.password)\n    }\n\n\n\n    return (\n        <Form onChange={handleChange}>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control type=\"email\" placeholder=\"Email\" name=\"email\" value={ formValues.email }/>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                <Form.Label>Contraseña</Form.Label>\n                <Form.Control type=\"password\" placeholder=\"Contraseña\" name=\"password\" value={ formValues.password }/>\n            </Form.Group>\n\n\n            <Button variant=\"primary\" type=\"button\" size='lg' onClick={ handleSubmit }>\n                Ingresar\n            </Button>\n\n\n            <p style={{ marginTop: '1rem'}}>\n                No tenes cuenta? Podes registrarte <a href='#' onClick={ () => setLoginForm(false) }>aqui</a>\n            </p>\n        </Form>\n    )\n\n\n\n}\n\n\nconst RegisterForm = ({setLoginForm}) => {\n\n    const dispatch = useDispatch();\n\n    const [formValues, setformValues] = useState({\n        email: '',\n        password: '',\n        passwordRepeat: '',\n        userName: ''\n    })\n\n    const handleChange = ({ target }) => {\n        setformValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n    }\n\n\n    const handleSubmit = () => {\n        if( isValid() ){\n            try {\n                \n                dispatch( startCreateUser(formValues.email, formValues.password, formValues.userName, formValues.passwordRepeat) )\n            \n            } catch (error) {\n                console.log(error);\n            }\n        }\n    }\n\n\n    const isValid = () => {\n        return !!( formValues.email?.trim() != '' && formValues.password && formValues.password?.trim != '' && formValues.passwordRepeat?.trim != '' )\n    }\n\n    return (\n        <Form onChange={ handleChange }>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control type=\"email\" name='email' placeholder=\"Email\" />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                <Form.Label>Nombre de usuario</Form.Label>\n                <Form.Control type=\"text\" name='userName' placeholder=\"Nombre de usuario\" />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                <Form.Label>Contraseña</Form.Label>\n                <Form.Control type=\"password\" name='password' placeholder=\"Contraseña\" />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                <Form.Label>Repita la contraseña</Form.Label>\n                <Form.Control type=\"password\" name='passwordRepeat' placeholder=\"Repita la contraseña\" />\n            </Form.Group>\n\n\n            <Button variant=\"primary\" type=\"button\" size='lg' onClick={ handleSubmit }>\n                Ingresar\n            </Button>\n\n\n            <p style={{ marginTop: '1rem'}}>\n                Ya tenes cuenta? Podes ingresar <a href='#' onClick={ () => setLoginForm(true) }>aqui</a>\n            </p>\n        </Form>\n    )\n\n\n}","/home/franc/proyectos/ToDosApp/client/src/components/main/Router.js",[],"/home/franc/proyectos/ToDosApp/client/src/components/main/HomePage.js",["91","92","93"],"import React, { useEffect, useState } from 'react'\nimport { Row, Col, Container, Card, Buttom, Badge } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { StartCompletedToDo, StartDeleteToDo, StartObtenerTodos } from '../../actions/Todos'\nimport { apiService } from '../../services/apiService'\nimport Swal from 'sweetalert2';\nimport moment from 'moment';\n\nexport const HomePage = () => {\n\n    const dispatch = useDispatch()\n    const { user, todos } = useSelector(state => state)\n    \n    \n    useEffect(() => {\n        dispatch( StartObtenerTodos( user.token ))\n    }, [])\n    \n\n\n    return (\n        <Row style={{ height: '90vh' }} class='d-flex justify-content-center aling-items-center'>\n            <Col style={ styles.col } className='d-flex justify-content-center'>\n                <Container>\n                    \n                    <div style={{ textAlign: 'center', margin: '1rem', borderBottom: '1px solid black' }}>\n                        <h4>Pendientes</h4>\n                    </div>\n\n                    <Row>\n\n\n                        {\n                            todos.toDos.map( item => (\n                                <ToDoItem todo={ item }/>\n                            ))\n                        }\n                    </Row>\n\n                </Container>\n            </Col>\n        </Row>  \n    )\n}\n\n\n\nconst ToDoItem = ({ todo }) => {\n\n    const dispatch = useDispatch()\n    const { token } = useSelector(state => state.user)\n    const [user, setUser] = useState(null)\n\n    const getBg = () => {\n        switch( todo.Criticality ){\n            case 'HIGH': \n                return 'red'\n            case 'MEDIUM' : \n                return 'yellow'\n            default : \n                return 'rgba(0,0,0,.125)'\n        }\n    }\n\n    useEffect(() => {\n\n        if( todo.User ) {\n            apiService.getUsuarioById( todo.User, token )\n            .then( res => {\n                setUser(res.data.user)\n            })\n            .catch( e => {\n                Swal.fire('Error', 'Error en los servicios', 'error');\n            });\n        }\n    }, [todo])\n\n\n\n    const handleDelete = () => {\n        dispatch( StartDeleteToDo( token, todo._id) );\n    }\n\n\n\n    const handleComplete = () => {\n        dispatch( StartCompletedToDo( token, todo._id) );\n    }\n\n    console.log(moment( todo.LimitDate ).format('DD-MM-YYYY'));\n\n\n    return (\n        <Card style={{ width: '100%', margin: '1rem 0', borderColor: getBg() }} key={ todo._id }>\n            <Card.Body>\n                <Card.Subtitle className=\"mb-2 text-muted\">Creado por: { user?.UserName }</Card.Subtitle>\n                <Card.Title>{ todo.Name }</Card.Title>\n                <Card.Text>\n                { todo.Description }\n                </Card.Text>\n                <Badge style={ styles.badge } className='m-2' onClick={ handleDelete } >Eliminar</Badge>{\"   \"} \n                <Badge style={ styles.badge } onClick={ handleComplete } >Listo</Badge>\n            </Card.Body>\n            <Card.Footer style={{ textAlign: 'right'}}>\n                <Card.Text>A completar el: { moment( todo.LimitDate ).format('DD/MM/yyyy').toString() }</Card.Text>\n            </Card.Footer>\n        </Card>\n    )\n\n\n}\n\n\n\nconst styles = {\n    col: {\n        backgroundColor: 'white',\n        borderRadius: '5px',\n        minHeigth: '85vh',\n        margin: '10px',\n        overflowY: 'scroll',\n        maxHeight: '100%'\n    },\n    badge: {\n        cursor: 'pointer'\n    }\n}","/home/franc/proyectos/ToDosApp/client/src/components/main/AnterioresPage.js",["94"],"/home/franc/proyectos/ToDosApp/client/src/components/main/ModalNewToDo.js",["95","96","97","98","99","100"],"import React, {useEffect, useState} from 'react'\nimport {Button, Modal, Form, InputGroup, FormControl} from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { HideModalNewToDo, ShowModalNewToDo } from '../../actions/Modal';\nimport moment from 'moment';\nimport { StartCraeteToDo } from '../../actions/Todos';\n\nconst initialStateFormValues = {\n    Name: '',\n    Description: '',\n    LimitDate: '',\n    Criticality: ''\n}\nconst initialStateFormErrors = {\n    Name: false,\n    Description: false,\n    LimitDate: false,\n    Criticality: false\n}\n\n\nexport const ModalNewToDo = () => {\n\n    const dispatch = useDispatch()\n    const { showModal } = useSelector( state => state.modal )\n    const { token } = useSelector( state => state.user )\n\n    const [formValues, setformValues] = useState(initialStateFormValues)\n    const [formErrors, setformErrors] = useState(initialStateFormErrors)\n\n    const handleClose = () => dispatch( HideModalNewToDo() );\n\n    const handleChange = ({ target }) => {\n        setformValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n        setformErrors({\n            ...formErrors,\n            [target.name]: false\n        })\n    }\n\n    useEffect(() => {\n        setformErrors( initialStateFormErrors);\n        setformValues(initialStateFormValues);\n    }, [showModal])\n\n\n    const handleSubmit = () => {\n        if( isValid() ){\n\n            console.log( formValues.LimitDate)\n            dispatch( StartCraeteToDo(token, formValues.Name, formValues.Description, formValues.LimitDate, formValues.Criticality ))\n            handleClose()\n        }\n    }\n\n\n    const isValid = () => {\n\n        let errorObject = {\n            Name: false,\n            Description: false,\n            LimitDate: false,\n            Criticality: false\n        }\n        let result = true;\n        \n        if( !(formValues.Name?.trim() != '') ) {\n            errorObject.Name = true;\n        }\n\n        if( !(formValues.Description?.trim() != '') ) {\n            errorObject.Description = true;\n        }\n\n        if( ! (formValues.LimitDate && moment().subtract('day', 1).isSameOrBefore( moment(formValues.LimitDate ))  ) ) {\n            errorObject.LimitDate = true;\n        }\n\n        if( !(formValues.Criticality?.trim() != '')) {\n            errorObject.Criticality = true;\n        }\n\n\n        Object.keys(errorObject).forEach( key => {\n            if( errorObject[key] ) {\n                result = false;\n            } \n        });\n\n\n        setformErrors({...errorObject});\n        return result;\n    }\n\n    return (\n    <>\n        <Modal show={showModal} onHide={handleClose}>\n        <Modal.Header closeButton>\n            <Modal.Title>Nuevo ToDo!!!</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            <Form onChange={ handleChange }>\n\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Form.Label>Nombre</Form.Label>\n                    <Form.Control type=\"text\" isInvalid={ formErrors.Name } name='Name' value={ formValues.Name } placeholder=\"Nombre\" />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Descripcion</Form.Label>\n                    <Form.Control type=\"text\" isInvalid={ formErrors.Description }  name='Description' value={ formValues.Description } placeholder=\"Descripcion\" />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Fecha limite</Form.Label>\n                    <Form.Control type=\"date\" isInvalid={ formErrors.LimitDate } name='LimitDate' value={ formValues.LimitDate } placeholder=\"Fecha limite\" />\n                </Form.Group>\n\n\n                <Form.Group className=\"mb-3 mt-3\"> \n                    <Form.Label style={{ display: 'block' }}>Criticidad</Form.Label>\n\n                    <Form.Check\n                        inline\n                        label=\"Baja\"\n                        name=\"Criticality\"\n                        value='2'\n                        type='radio'\n                        id={`inline-radio-1`}\n                    />\n                    <Form.Check\n                        inline\n                        label=\"Media\"\n                        name=\"Criticality\"\n                        value='1'\n                        type='radio'\n                        id={`inline-radio-2`}\n                    />\n                    <Form.Check\n                        inline\n                        label=\"Alta\"\n                        name=\"Criticality\"\n                        value='0'\n                        type='radio'\n                        id={`inline-radio-3`}\n                    /> \n                    {\n                        formErrors.Criticality &&\n                        <Form.Text className=\"text-danger\">\n                            Debe completar este campo\n                        </Form.Text>\n                    }\n                </Form.Group>\n            </Form>\n        </Modal.Body>\n        <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n            Cancelar\n            </Button>\n            <Button variant=\"primary\" onClick={ handleSubmit }>\n            Confirmar\n            </Button>\n        </Modal.Footer>\n        </Modal>\n    </>\n    );\n}\n","/home/franc/proyectos/ToDosApp/client/src/store/store.js",[],"/home/franc/proyectos/ToDosApp/client/src/reducers/modalReducer.js",[],"/home/franc/proyectos/ToDosApp/client/src/types/types.js",[],"/home/franc/proyectos/ToDosApp/client/src/actions/Modal.js",[],"/home/franc/proyectos/ToDosApp/client/src/actions/User.js",[],"/home/franc/proyectos/ToDosApp/client/src/services/apiService.js",[],"/home/franc/proyectos/ToDosApp/client/src/reducers/userReducer.js",[],"/home/franc/proyectos/ToDosApp/client/src/actions/Todos.js",[],"/home/franc/proyectos/ToDosApp/client/src/reducers/toDoReducer.js",["101","102","103"],"import { types } from '../types/types';\n\nconst initialState = {\n    toDos: [],\n    toDosAnteriores: []\n}\n\n\nexport const toDoReducer = ( state = initialState, action ) => {\n    console.log(action.payload);\n    switch ( action.type ) {\n        case types.newToDo : \n            return {\n                ...state,\n                toDos: [ action.payload, ...state.toDos, ]\n            }\n        case types.deleteToDo :\n            return {\n                ...state,\n                toDos : [ ...(state.toDos.filter( todo => todo._id != action.payload  )) ]\n            } \n        case types.completeToDo :\n            return {\n                ...state,\n                toDosAnteriores: [ ...state.toDosAnteriores, { ...state.toDos.find( todo => todo._id == action.payload  ), Completed: true }],\n                toDos: [ ...state.toDos.filter( todo => todo._id != action.payload  ) ]\n            } \n        case types.obtenerToDos :\n            return {\n                ...state,\n                toDos: [ ...action.payload ]\n            } \n        case types.obtenerToDosAnteriores :\n            return {\n                ...state,\n                toDosAnteriores: [ ...action.payload ]\n            } \n        default: \n        return {\n            ...state\n        }\n    }\n\n\n\n}",{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":64,"column":45,"nodeType":"110","messageId":"111","endLine":64,"endColumn":47},{"ruleId":"112","severity":1,"message":"113","line":88,"column":52,"nodeType":"114","endLine":88,"endColumn":102},{"ruleId":"108","severity":1,"message":"109","line":131,"column":45,"nodeType":"110","messageId":"111","endLine":131,"endColumn":47},{"ruleId":"108","severity":1,"message":"109","line":131,"column":103,"nodeType":"110","messageId":"111","endLine":131,"endColumn":105},{"ruleId":"108","severity":1,"message":"109","line":131,"column":144,"nodeType":"110","messageId":"111","endLine":131,"endColumn":146},{"ruleId":"112","severity":1,"message":"113","line":163,"column":49,"nodeType":"114","endLine":163,"endColumn":98},{"ruleId":"115","severity":1,"message":"116","line":2,"column":37,"nodeType":"117","messageId":"118","endLine":2,"endColumn":43},{"ruleId":"119","severity":1,"message":"120","line":17,"column":8,"nodeType":"121","endLine":17,"endColumn":10,"suggestions":"122"},{"ruleId":"119","severity":1,"message":"123","line":76,"column":8,"nodeType":"121","endLine":76,"endColumn":14,"suggestions":"124"},{"ruleId":"119","severity":1,"message":"120","line":23,"column":8,"nodeType":"121","endLine":23,"endColumn":10,"suggestions":"125"},{"ruleId":"115","severity":1,"message":"126","line":2,"column":30,"nodeType":"117","messageId":"118","endLine":2,"endColumn":40},{"ruleId":"115","severity":1,"message":"127","line":2,"column":42,"nodeType":"117","messageId":"118","endLine":2,"endColumn":53},{"ruleId":"115","severity":1,"message":"128","line":4,"column":28,"nodeType":"117","messageId":"118","endLine":4,"endColumn":44},{"ruleId":"108","severity":1,"message":"109","line":70,"column":39,"nodeType":"110","messageId":"111","endLine":70,"endColumn":41},{"ruleId":"108","severity":1,"message":"109","line":74,"column":46,"nodeType":"110","messageId":"111","endLine":74,"endColumn":48},{"ruleId":"108","severity":1,"message":"109","line":82,"column":46,"nodeType":"110","messageId":"111","endLine":82,"endColumn":48},{"ruleId":"108","severity":1,"message":"109","line":20,"column":68,"nodeType":"110","messageId":"111","endLine":20,"endColumn":70},{"ruleId":"108","severity":1,"message":"129","line":25,"column":102,"nodeType":"110","messageId":"111","endLine":25,"endColumn":104},{"ruleId":"108","severity":1,"message":"109","line":26,"column":66,"nodeType":"110","messageId":"111","endLine":26,"endColumn":68},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'Buttom' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'user.token'. Either include them or remove the dependency array.","ArrayExpression",["132"],"React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["133"],["134"],"'InputGroup' is defined but never used.","'FormControl' is defined but never used.","'ShowModalNewToDo' is defined but never used.","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"135","fix":"139"},"Update the dependencies array to be: [dispatch, user.token]",{"range":"140","text":"141"},"Update the dependencies array to be: [todo, token]",{"range":"142","text":"143"},{"range":"144","text":"141"},[605,607],"[dispatch, user.token]",[2112,2118],"[todo, token]",[622,624]]